Interface.Error
: Module

[ Data.Either ]

Error : (E : Type) -> Interface
{ throw : E -> [Error E]A
, catch : [Error E]A -> (E -> [Error E]A) -> [Error E]A }

handle : { E, A : Type } -> (h : E -> [Error E]A) -> (a : [Error E]A) -> [Error E]A
{ catch a h }

try : { E, A : Type } -> (a : [Error E]A) -> [Error E]Either E A
{ handle inl (inr a) }
