Effect.State
: [Base.Unit]
  Module
{

# FIXME: should we require the return types to be written more explicitly?
State : (S : Type) -> Interface
{ get : S         # [State S]{S}
, put : S -> Unit # S -> [State S]{Unit}
}

modify : { S : Type } -> (f : S -> S) -> [State S]{Unit}
{ put (f get!) }

evalState : { S, A : Type } -> (s : S) -> [State S]A -> A
{ [ get   ; k ] -> evalState s (k s)
, [ put s ; k ] -> evalState s (k unit)
, a             -> a }

}
