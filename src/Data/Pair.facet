Data.Pair : Module
{

Pair : (A : Type) -> (B : Type) -> Type
{ pair : A -> B -> Pair A B }

fst : { A : Type } -> { B : Type } -> Pair A B -> A
{ (pair a _) -> a }

snd : { A : Type } -> { B : Type } -> Pair A B -> A
{ (pair _ b) -> b }

}
