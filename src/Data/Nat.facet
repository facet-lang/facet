Data.Nat
: Module

data Nat : Type
{ z : Nat
, s : Nat -> Nat }

_ + _ : Nat -> Nat -> Nat
{ (z)   -> { x -> x }
, (s n) -> { x -> s (n + x)} }

_ * _ : (a : Nat) -> Nat -> Nat
{ (z)   -> z
, (s n) -> a + (a * n) }
