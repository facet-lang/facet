Data.Bool : Module

data Bool : Type
{ false : Bool
, true : Bool }

not : Bool -> Bool
{ (true)  -> false
, (false) -> true }

# NB: I am removing nested, chained pattern matches until I get around to correcting their elaboration
and : Bool -> Bool -> Bool
{ (true) -> { x -> x }
, _      -> { _ -> false } }

# NB: I am removing nested, chained pattern matches until I get around to correcting their elaboration
or : Bool -> Bool -> Bool
{ (false) -> { x -> x }
, _       -> { _ -> true } }
